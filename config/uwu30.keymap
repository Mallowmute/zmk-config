/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_mo1 {
            timeout-ms = <100>;
            key-positions = <1 2>;
            bindings = <&mo 1>;
        };

        combo_mo2 {
            timeout-ms = <100>;
            key-positions = <28 29>;
            bindings = <&mo 2>;
        };
    };
};

&mt { tapping-term-ms = <400>; };

/ {
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DQT &kp COLON &kp COLON &kp RET &kp LPAR &kp SPACE &kp CARET &kp CARET &kp SPACE &kp RPAR &kp DQT>;
            label = "NEW_MACRO";
        };

        new_macro2: new_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp SEMI &kp SEMI &kp AT &kp TILDE &kp AT &kp RPAR>;
            label = "NEW_MACRO2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W  &kp F  &kp P  &kp G  &kp J      &kp L  &kp U      &kp Y       &kp BACKSPACE
&kp A           &kp R  &kp S  &kp T  &kp D  &kp H      &kp N  &kp E      &kp I       &kp O
&kp LEFT_SHIFT  &kp X  &kp C  &kp V  &kp B  &kp K      &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&none                  &mo 1  &mo 2  &kp A  &kp SPACE         &kp E                  &kp B
            >;
        };

        nav_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N7     &kp N8         &kp N9            &kp N0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &kp F6        &kp MINUS  &kp EQUAL      &kp KP_DIVIDE     &kp SEMICOLON
&trans        &kp LC(X)     &kp LC(C)     &kp LC(V)     &none   &trans        &kp TILDE  &kp LESS_THAN  &kp GREATER_THAN  &kp SLASH
&trans                      &trans        &mo 3         &trans  &trans                   &trans                           &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH          &kp DOLLAR  &kp PERCENT  &kp CARET       &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F7           &kp F8       &kp F9            &kp F10     &kp F11      &kp F12         &kp UNDERSCORE  &kp PLUS      &kp DOUBLE_QUOTES     &kp ENTER
&kp Z            &mo 3        &trans            &trans      &trans       &trans          &kp LEFT        &kp UP_ARROW  &kp DOWN              &kp RIGHT
&trans                        &kp LEFT_CONTROL  &trans      &trans       &kp APOSTROPHE                  &mo 3                               &trans
            >;
        };

        f_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &new_macro2
&trans  &trans  &mo 4   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans          &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans       &trans            &trans         &trans          &trans  &trans  &trans  &trans  &trans
&trans  &bootloader  &ext_power EP_ON  &bt BT_DISC 0  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
&trans  &trans       &trans            &trans         &trans          &trans  &trans  &trans  &trans  &trans
&trans               &trans            &trans         &trans          &trans          &trans          &trans
            >;
        };
    };
};
